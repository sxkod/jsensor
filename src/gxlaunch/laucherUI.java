package gxlaunch;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author skodela
 */
public class laucherUI extends javax.swing.JFrame {

    /**
     * Creates new form laucherUI
     */
    launchthread ltx=null;

    public laucherUI() {
        initComponents();
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ltitle = new javax.swing.JLabel();
        lstatus = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        maplog = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        blaunch = new javax.swing.JButton();
        bkill = new javax.swing.JButton();
        breload = new javax.swing.JButton();
        bdelete = new javax.swing.JButton();
        bquit = new javax.swing.JButton();
        bclrlog = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        maplist = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        configtextarea = new javax.swing.JTextArea();
        btnconfsave = new javax.swing.JButton();
        btnconfclear = new javax.swing.JButton();
        btnconfload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("gxLauncher");
        setBackground(new java.awt.Color(0, 0, 51));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gxlaunch/icon.png")).getImage());
        setResizable(false);

        ltitle.setFont(new java.awt.Font("URW Gothic L", 1, 18)); // NOI18N
        ltitle.setForeground(new java.awt.Color(0, 51, 204));
        ltitle.setText("gxLauncher version 1.01a");

        lstatus.setFont(new java.awt.Font("Courier New", 0, 8)); // NOI18N
        lstatus.setText("...");

        maplog.setColumns(20);
        maplog.setForeground(new java.awt.Color(51, 0, 255));
        maplog.setRows(5);
        jScrollPane2.setViewportView(maplog);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        blaunch.setForeground(new java.awt.Color(0, 0, 153));
        blaunch.setText("Launch");
        blaunch.setFocusable(false);
        blaunch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        blaunch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        blaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blaunchActionPerformed(evt);
            }
        });

        bkill.setForeground(new java.awt.Color(0, 0, 153));
        bkill.setText("Kill");
        bkill.setFocusable(false);
        bkill.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bkill.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkillActionPerformed(evt);
            }
        });

        breload.setForeground(new java.awt.Color(0, 0, 153));
        breload.setText("Reload");
        breload.setFocusable(false);
        breload.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        breload.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        breload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breloadActionPerformed(evt);
            }
        });

        bdelete.setForeground(new java.awt.Color(0, 0, 153));
        bdelete.setText("Delete");
        bdelete.setFocusable(false);
        bdelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bdelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdeleteActionPerformed(evt);
            }
        });

        bquit.setForeground(new java.awt.Color(0, 0, 153));
        bquit.setText("Quit");
        bquit.setFocusable(false);
        bquit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bquit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bquit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bquitActionPerformed(evt);
            }
        });

        bclrlog.setForeground(new java.awt.Color(0, 0, 153));
        bclrlog.setText("Clear Log");
        bclrlog.setFocusable(false);
        bclrlog.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bclrlog.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bclrlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bclrlogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blaunch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(breload, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bquit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bclrlog, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkill, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(blaunch)
                .addGap(30, 30, 30)
                .addComponent(bkill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(breload)
                .addGap(30, 30, 30)
                .addComponent(bdelete)
                .addGap(30, 30, 30)
                .addComponent(bclrlog)
                .addGap(30, 30, 30)
                .addComponent(bquit)
                .addContainerGap())
        );

        maplist.setForeground(new java.awt.Color(153, 0, 51));
        maplist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { ".", "..", "..." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(maplist);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Launcher", jPanel2);

        configtextarea.setColumns(20);
        configtextarea.setRows(5);
        jScrollPane3.setViewportView(configtextarea);

        btnconfsave.setText("Save");
        btnconfsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconfsaveActionPerformed(evt);
            }
        });

        btnconfclear.setText("Clear");
        btnconfclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconfclearActionPerformed(evt);
            }
        });

        btnconfload.setText("Load");
        btnconfload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconfloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnconfclear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnconfsave, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnconfload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btnconfload, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnconfsave, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnconfclear, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Config", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ltitle)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lstatus, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnconfloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconfloadActionPerformed
        gxConf cnfloc=new gxConf();
        String ctext=cnfloc.getconf();
        if (ctext.length()>0){
            setconfta(ctext);
        }
        else {setconfta("Unable to load the config!");}
    }//GEN-LAST:event_btnconfloadActionPerformed

    private void btnconfclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconfclearActionPerformed
        // TODO add your handling code here:
        configtextarea.setText("");
    }//GEN-LAST:event_btnconfclearActionPerformed

    private void btnconfsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconfsaveActionPerformed
        String ctext=configtextarea.getText();
        if (ctext.length()>0){
            try{
                PrintWriter pxw=new PrintWriter("gxcontrol.conf","UTF-8");
                pxw.print(ctext);
                pxw.close();
            }
            catch(Exception e) {setlog("\nUnable to store config file!");}
        }
        else {setlog("No text in config editor!"); }
    }//GEN-LAST:event_btnconfsaveActionPerformed

    private void bclrlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bclrlogActionPerformed
        maplog.setText("");
    }//GEN-LAST:event_bclrlogActionPerformed

    private void bquitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bquitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bquitActionPerformed

    private void bdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdeleteActionPerformed
        // TODO add your handling code here:
        //remove the chosen map file.
    }//GEN-LAST:event_bdeleteActionPerformed

    private void breloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breloadActionPerformed
        try{
            setlog("Listing maps from ./mapping/");
            File dir = new File("./mapping/");
            File[] filesList = dir.listFiles();
            ArrayList<String> mapfilearr=new ArrayList<String>();
            String[] mapfiles=null;

            for (File file : filesList) {
                if (file.isFile()) {
                    String fname= file.getName();
                    if (fname.length()<5){continue;}
                    String fext=fname.substring(fname.length()-4,fname.length() );
                    if (fext.equals(".map")) {
                        mapfilearr.add(file.getName());
                        setlog("Reading "+fname);
                    }
                }
            }
            mapfiles=mapfilearr.toArray(new String[0]);
            maplist.setListData(mapfiles);
            setlog("Done loading maps.");
        }
        catch (Exception ex){}
    }//GEN-LAST:event_breloadActionPerformed

    private void bkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkillActionPerformed
        setlog("Killing the sensor service.");
        if(ltx!=null) {ltx.interrupt();}
    }//GEN-LAST:event_bkillActionPerformed

    private void blaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blaunchActionPerformed
        setlog("Starting Sensor service.");
        ltx=new launchthread();
        ltx.start();
    }//GEN-LAST:event_blaunchActionPerformed

    public void setlog(String sx){
        maplog.append("\n"+sx);
    }
    
    public void setconfta(String dx){
        configtextarea.setText(dx);
    }

    public String getselmap(){
        String selx;
        selx=maplist.getSelectedValue();
        return selx;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(laucherUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(laucherUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(laucherUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(laucherUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               lui= new gxlaunch.laucherUI();
               lui.setVisible(true);
               lui.breload.doClick();
            }
        });
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bclrlog;
    private javax.swing.JButton bdelete;
    private javax.swing.JButton bkill;
    private javax.swing.JButton blaunch;
    private javax.swing.JButton bquit;
    private javax.swing.JButton breload;
    private javax.swing.JButton btnconfclear;
    private javax.swing.JButton btnconfload;
    private javax.swing.JButton btnconfsave;
    private javax.swing.JTextArea configtextarea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lstatus;
    private javax.swing.JLabel ltitle;
    private javax.swing.JList<String> maplist;
    private javax.swing.JTextArea maplog;
    // End of variables declaration//GEN-END:variables
protected static gxlaunch.laucherUI lui=null;
}
